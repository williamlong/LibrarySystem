package librarysystem;

import librarysystem.controller.ActualItem;
import librarysystem.controller.Author;
import librarysystem.controller.Member;
import librarysystem.controller.Book;
import librarysystem.controller.Magazine;
import librarysystem.controller.Loan;
import librarysystem.controller.ReturnedLoan;
import librarysystem.controller.Reservation;
import librarysystem.controller.LibraryItem;
import java.util.Date;
import java.util.HashMap;

public interface ILibrarySystem {

    //SYSTEM Serialization
    public void serialize();
    public void deserialize();

    //SCREEN: MEMBERS
    public Member createMember(String fname, String lname, String address, String telNo);
    public HashMap<Long, Loan> getMemberLoans(long memberId);
    public HashMap<Long, ReturnedLoan> getMemberReturnedLoans(long memberId);

    //SCREEN: ITEMS/COPIES/LOANS
    public Book createBook(String title, int maxCheckoutLength, String isbnA, String isbnB, int version, Date published);
    public Author createAuthor(String fname, String lname);
    public void addBookAuthor(Book book, Author author);
    public Magazine createMagazine(String title, int maxCheckoutLength, int volume, int issueNo, Date published);
    public HashMap<Long, ActualItem> createCopies(long itemId, int numCopies);
    public Loan lendCopy(long memberId, long copyId);
    public ReturnedLoan returnCopy(long copyId);
    public Reservation reserveCopy(long copyId, long memberId);
    public Reservation reserveItem(long itemId, long memberId);

    //SCREEN: RESERVATIONS
    public Loan lendReservedItem(long reservationId);
    public void cancelReservation(long reservationId);

    //SCREEN: OVERDUE & RETURNEDLOANS
    public HashMap<Long, Loan> getAllOverdue();

    //Others
    public HashMap<Long, Member> getAllMembers();
    public HashMap<Long, LibraryItem> getAllItems();
    public HashMap<Long, ActualItem> getAllActualItems();
    public HashMap<Long, Reservation> getAllReservations();

    public Member getMember(long memberId);
    public LibraryItem getItem(long itemId);
    public ActualItem getActualItem(long copyId);
}